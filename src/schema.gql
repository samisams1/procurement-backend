# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input CategoryInput {
  name: Float!
}

input ChangePasswordInput {
  currentPassword: String!
  newPassword: String!
}

input CreateOrderDetailInput {
  price: Float!
  productId: Int!
  quantity: Float!
  title: String!
}

input CreateOrderInput {
  customerId: Float!
  orderDetails: [CreateOrderDetailInput!]!
  shippingCost: Float!
  status: String!
  supplierId: Float!
  tax: Float!
  totalPrice: Float!
}

input CreateProductInput {
  Description: String!
  code: String!
  manufacturer: String!
  mark: String!
  model: String!
  partNumber: String!
  quantity: Float!
  quotation: String
  title: String!
  uom: String!
}

input CreatePurchaseRequestInput {
  addressDetail: String!
  estimatedDelivery: String!
  products: [CreateProductInput!]!
  remark: String!
  selectedType: String!
  status: String!
  suppliers: [CreateSupplierInput!]!
  userId: Float!
}

input CreateQuotationInput {
  customerId: Int!
  productPrices: [ProductPriceInput!]!
  purchaseRequestId: Int
  requestId: Int!
  shippingPrice: Float!
  status: String!
  supplierId: Int!
}

input CreateSupplierInput {
  id: Float!
}

input CreateUserInput {
  categoryId: Float!
  email: String!
  firstName: String!
  lastName: String!
  password: String!
  role: String!
  username: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input ForgotPasswordInput {
  email: String!
}

input LoginInput {
  password: String!
  username: String!
}

type LoginResponse {
  token: String!
  user: User!
}

type MonthlyReport {
  amount: Int!
  month: String!
}

type Mutation {
  changePassword(changePasswordInput: ChangePasswordInput!, userId: Float!): User!
  createCategory(input: CategoryInput!): category!
  createNotification(input: NotificationInput!): Notification!
  createOrder(input: CreateOrderInput!): Order!
  createPayment(input: PaymentCreateInput!): Payment!
  createPurchaseRequest(input: CreatePurchaseRequestInput!): purchaseRequest!
  createQuotation(input: CreateQuotationInput!): Quotation!
  createShipping(data: ShippingCreateInput!): Shipping!
  createUser(input: CreateUserInput!): User!
  deleteUser(id: Int!): User!
  forgotPassword(input: ForgotPasswordInput!): Boolean!
  login(input: LoginInput!): LoginResponse!
  notification: Boolean!
  resetPassword(input: ResetPasswordInput!): User!
  updateNotification(id: Float!): Notification!
  updateOrder(id: Float!, status: String!): Order!
  updateQuotation(id: Int!, input: UpdateQuotationInput!): Quotation!
  updateUser(id: Int!, input: UpdateUserInput!): User!
  verifyUser(token: String!): Boolean!
}

type Notification {
  id: Float!
  message: String!
  recipientId: Float!
  soundUrl: String!
  status: String!
  type: String!
}

input NotificationInput {
  message: String!
  recipientId: Float!
  type: String!
}

type Order {
  createdAt: DateTime!
  customer: [supplier!]!
  customerId: Int!
  id: Int!
  orderDetails: [OrderDetail!]!
  purchaseRequest: purchaseRequest!
  referenceNumber: String!
  shippingCost: Float!
  status: String!
  supplierId: Int!
  suppliers: [supplier!]!
  tax: Float!
  totalPrice: Int!
}

type OrderDetail {
  id: Int!
  orderId: Int!
  price: Int!
  product: product!
  productId: Int!
  quantity: Int!
  title: String!
}

type Payment {
  amount: Float!
  id: Int!
  order: Order!
  paidAt: DateTime!
  paymentMethod: String!
  referenceNumber: String!
  status: String!
  user: User!
}

input PaymentCreateInput {
  amount: Float!
  fullName: String!
  orderId: Int!
  paymentMethod: String!
  referenceNumber: String!
  status: String!
  userId: Int!
}

type ProductPrice {
  id: Int!
  price: Float!
  product: product!
  productId: Int!
}

input ProductPriceInput {
  price: Float!
  productId: Int!
}

type Query {
  allPurchaseRequests: [purchaseRequest!]!
  allQuotations: [Quotation!]!
  categories: [category!]!
  countAllRequestBystatus(status: String!): Int!
  countNotifications: Int!
  countOAllrderByStatus(status: String!): Int!
  countOrderBystatus(status: String!, userId: Float!): Int!
  countOrders: Int!
  countPaymentBystatus(status: String!): Int!
  countPurchaseRequestBystatus(status: String!, userId: Float!): Int!
  countRfq: Int!
  countUsers: Int!
  countrequests: Int!
  getApprovedOrderByCustomerId(customerId: Float!): [Order!]!
  getOrderByCustomerId(customerId: Float!): [Order!]!
  getOrderById(id: Int!): Order!
  getOrderBySupplierId(supplierId: Float!): [Order!]!
  getOrderDetailByOrderId(id: Float!): [OrderDetail!]!
  me: User!
  monthlyReport: [MonthlyReport!]!
  notitfications: [Notification!]!
  orders: [Order!]!
  payment(id: Int!): [Payment!]!
  payments: [Payment!]!
  products: [product!]!
  purchaseRequest(id: Float!): purchaseRequest!
  purchaseRequestBySupplier(id: Float!): [purchaseRequest!]!
  purchaseRequests: [purchaseRequest!]!
  purchaseRequestsByUSerId(userId: Float!): [purchaseRequest!]!
  quotation(id: Float!): Quotation!
  quotationByRequestId(requestId: Float!): [Quotation!]!
  quotationByRequestIdAdSupplierId(id: Float!, supplierId: Float!): [Quotation!]!
  quotations: [Quotation!]!
  searchOrders(query: String!): [Order!]!
  searchPurchaseRequests(query: String!): [Order!]!
  shippings: [Shipping!]!
  shippingsByUserId(userId: Float!): [Shipping!]!
  suppliers: [supplier!]!
  suppliersByCategoryId(categoryId: Int!): [supplier!]!
  user(id: Int!): User
  users: [User!]!
}

type Quotation {
  createdAt: DateTime!
  customerId: Int!
  id: ID!
  productPrices: [ProductPrice!]!
  purchaseRequestId: Int
  shippingPrice: Float!
  status: String!
  supplierId: Int!
}

input ResetPasswordInput {
  email: String!
  password: String!
  token: String!
}

type Shipping {
  address: String!
  id: Int!
  order: Order!
  orderId: Int!
  status: String!
  user: User!
}

input ShippingCreateInput {
  address: String!
  order: CreateOrderInput!
  orderId: Int!
  user: CreateUserInput!
  userId: Int!
}

type Subscription {
  notification: Notification!
}

input UpdateProductPriceInput {
  id: Int!
  price: Float!
}

input UpdateQuotationInput {
  productPrices: [UpdateProductPriceInput!]!
  shippingPrice: Float!
  status: String!
}

input UpdateUserInput {
  categoryId: Float
  email: String
  firstName: String
  lastName: String
  password: String
  role: String
  username: String
}

type User {
  createdAt: DateTime!
  email: String!
  firstName: String!
  id: Int!
  lastName: String!
  password: String!
  role: String!
  status: String!
  updatedAt: DateTime!
  username: String!
}

type category {
  createdAt: DateTime!
  id: Int!
  name: String!
  suppliers: [supplier!]!
}

type product {
  Description: String!
  code: String!
  id: Int!
  manufacturer: String!
  mark: String!
  model: String!
  partNumber: String!
  quantity: Float!
  status: String!
  title: String!
  uom: String!
}

type purchaseRequest {
  addressDetail: String!
  createdAt: DateTime!
  estimatedDelivery: String!
  id: Int!
  products: [product!]!
  referenceNumber: String!
  remark: String!
  status: String!
  suppliers: [supplier!]!
  user: User!
}

type supplier {
  categoryId: Int!
  id: Int!
  name: String!
  user: User!
  userId: Int!
}